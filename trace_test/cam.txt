class SimpleCamera {                                                                                                                                                                                                                   public:                                                                                                                                                                                                                              SimpleCamera(const Eigen::Vector3d& location,                                                                                                                                                                                                    const Eigen::Matrix3d orientation, double fovx, double fovy,                                                                                                                                                                        size_t rays, PixelSelector pixel_selector = {},                                                                                                                                                                                     ProgressReporter reporter = {})                                                                                                                                                                                            : location(location), orientation(orientation), x0(-fovx / 2),                                                                                                                                                                        y0(-fovy / 2), fovx(fovx), fovy(fovy), rays(rays),                                                                                                                                                                                  pixel_selector(pixel_selector), reporter(reporter) {}                                                                                                                                                                                                                                                                                                                                                                                                             bool has_more_rays() const { return rays != 0; }                                                                                                                                                                                                                                                                                                                                                                                                                        template <typename G>                                                                                                                                                                                                               std::pair<Ray, Eigen::Vector2d> generate_ray(G& rng) {                                                                                                                                                                                  Eigen::Vector2d pixel = pixel_selector.get_normalized_pixel(rng);                                                                                                                                                                   auto d = Eigen::Vector3d(x0 + pixel(0) * fovx, y0 + pixel(1) * fovy, 1)                                                                                                                                                                        .normalized();                                                                                                                                                                                                           if (rays > 0) --rays;                                                                                                                                                                                                               ++reporter;                                                                                                                                                                                                                         return {{location, orientation * d}, pixel};                                                                                                                                                                                    }                                                                                                                                                                                                                                                                                                                                                                                                                                                                       std::vector<SimpleCamera> split(size_t count) const {                                                                                                                                                                                   return std::vector<SimpleCamera>(count, {location, orientation, fovx,                                                                                                                                                                                                        fovy, rays / count,                                                                                                                                                                                                                 pixel_selector, reporter});                                                                                                                                                            }                                                                                                                                                                                                                                                                                                                                                                                                                                                                      private:                                                                                                                                                                                                                             Eigen::Vector3d location;                                                                                                                                                                                                           Eigen::Matrix3d orientation;                                                                                                                                                                                                        double x0, y0, fovx, fovy;                                                                                                                                                                                                          size_t rays;                                                                                                                                                                                                                        PixelSelector pixel_selector;                                                                                                                                                                                                       ProgressReporter reporter;                                                                                                                                                                                                      };











































